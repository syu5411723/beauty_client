export var vertex = "\n    varying vec2 vUv;\n    void main() {\n      vUv = uv;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n    }\n";
export var fragment = "\n    varying vec2 vUv;\n    uniform float dispFactor;\n    uniform sampler2D disp;\n    uniform sampler2D texture1;\n    uniform sampler2D texture2;\n    uniform float angle1;\n    uniform float angle2;\n    uniform float intensity;\n    uniform vec4 res;\n    uniform vec2 parent;\n    mat2 getRotM(float angle) {\n      float s = sin(angle);\n      float c = cos(angle);\n      return mat2(c, -s, s, c);\n    }\n    void main() {\n      vec4 disp = texture2D(disp, vUv);\n      vec2 dispVec = vec2(disp.r, disp.g);\n      vec2 uv = 0.5 * gl_FragCoord.xy / (res.xy) ;\n      vec2 myUV = (uv - vec2(0.5))*res.zw + vec2(0.5);\n      vec2 distortedPosition1 = myUV + getRotM(angle1) * dispVec * intensity * dispFactor;\n      vec2 distortedPosition2 = myUV + getRotM(angle2) * dispVec * intensity * (1.0 - dispFactor);\n      vec4 _texture1 = texture2D(texture1, distortedPosition1);\n      vec4 _texture2 = texture2D(texture2, distortedPosition2);\n      gl_FragColor = mix(_texture1, _texture2, dispFactor);\n    }\n";
